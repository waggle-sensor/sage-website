"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3745],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var o=n(96540);const s={},a=o.createContext(s);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:t},e.children)}},77907:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"tutorials/cloud-compute","title":"Cloud compute & HPC on edge data","description":"Waggle provides a number of interfaces which other computing and HPC systems can build on top of. In this section, we explore some of the most common applications of Waggle.","source":"@site/docs/tutorials/cloud-compute.md","sourceDirName":"tutorials","slug":"/tutorials/cloud-compute","permalink":"/docs/tutorials/cloud-compute","draft":false,"unlisted":false,"editUrl":"https://github.com/waggle-sensor/sage-website/edit/main/docs/tutorials/cloud-compute.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Access Waggle sensors","permalink":"/docs/tutorials/access-waggle-sensors"},"next":{"title":"Building your own Waggle device","permalink":"/docs/tutorials/create-waggle"}}');var s=n(74848),a=n(28453);const i={sidebar_position:6},r="Cloud compute & HPC on edge data",d={},c=[{value:"Triggering on data from the edge",id:"triggering-on-data-from-the-edge",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"cloud-compute--hpc-on-edge-data",children:"Cloud compute & HPC on edge data"})}),"\n",(0,s.jsx)(t.p,{children:"Waggle provides a number of interfaces which other computing and HPC systems can build on top of. In this section, we explore some of the most common applications of Waggle."}),"\n",(0,s.jsx)(t.h2,{id:"triggering-on-data-from-the-edge",children:"Triggering on data from the edge"}),"\n",(0,s.jsx)(t.p,{children:"A common application is monitoring data from the edge and triggering actions when values exceed a threshold or an unusual event is detected."}),"\n",(0,s.jsxs)(t.p,{children:["As a getting started example, we demonstrate an outline of how this can be done in Waggle using the ",(0,s.jsx)(t.a,{href:"https://github.com/sagecontinuum/sage-data-client",children:"Sage data client"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import sage_data_client\nimport time\n\nwhile True:\n    # query pressure data in recent 10 minute window\n    df = sage_data_client.query(\n        start="-10m",\n        filter={\n            "name": "env.pressure",\n            "sensor": "bme680",\n        }\n    )\n\n    # compute stddev for nodes\' pressure data in window\n    std = df.groupby("meta.vsn").value.std()\n\n    # find all pressure events exceeding an example threshold\n    events = std[std > 8.0]\n\n    # "post" vsn to alert system\n    for vsn in events.index:\n        print(f"post {vsn} to alert system")\n\n    time.sleep(60)\n'})}),"\n",(0,s.jsx)(t.p,{children:'The above code queries a 10 minute window of atmospheric pressure data every minute and "posts" alerts for nodes exceeding a predefined standard deviation threshold.'}),"\n",(0,s.jsxs)(t.p,{children:["This example and more can be found in the Sage data client ",(0,s.jsx)(t.a,{href:"https://github.com/sagecontinuum/sage-data-client/blob/main/examples/",children:"examples"})," directory."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);